//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WebClient.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="EmployeeServiceSoap", Namespace="http://tempuri.org/")]
    public partial class EmployeeService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback addManagerOperationCompleted;
        
        private System.Threading.SendOrPostCallback addEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getManagerOfOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeesOfOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllEmployeesOperationCompleted;
        
        private System.Threading.SendOrPostCallback hireEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback createEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback stringifyEmployeeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public EmployeeService() {
            this.Url = global::WebClient.Properties.Settings.Default.WebClient_localhost_EmployeeService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event addManagerCompletedEventHandler addManagerCompleted;
        
        /// <remarks/>
        public event addEmployeeCompletedEventHandler addEmployeeCompleted;
        
        /// <remarks/>
        public event getManagerOfCompletedEventHandler getManagerOfCompleted;
        
        /// <remarks/>
        public event getEmployeesOfCompletedEventHandler getEmployeesOfCompleted;
        
        /// <remarks/>
        public event getAllEmployeesCompletedEventHandler getAllEmployeesCompleted;
        
        /// <remarks/>
        public event hireEmployeeCompletedEventHandler hireEmployeeCompleted;
        
        /// <remarks/>
        public event createEmployeeCompletedEventHandler createEmployeeCompleted;
        
        /// <remarks/>
        public event stringifyEmployeeCompletedEventHandler stringifyEmployeeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addManager", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addManager(Employee e) {
            this.Invoke("addManager", new object[] {
                        e});
        }
        
        /// <remarks/>
        public void addManagerAsync(Employee e) {
            this.addManagerAsync(e, null);
        }
        
        /// <remarks/>
        public void addManagerAsync(Employee e, object userState) {
            if ((this.addManagerOperationCompleted == null)) {
                this.addManagerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddManagerOperationCompleted);
            }
            this.InvokeAsync("addManager", new object[] {
                        e}, this.addManagerOperationCompleted, userState);
        }
        
        private void OnaddManagerOperationCompleted(object arg) {
            if ((this.addManagerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addManagerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addEmployee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addEmployee(Employee manager, Employee employee) {
            this.Invoke("addEmployee", new object[] {
                        manager,
                        employee});
        }
        
        /// <remarks/>
        public void addEmployeeAsync(Employee manager, Employee employee) {
            this.addEmployeeAsync(manager, employee, null);
        }
        
        /// <remarks/>
        public void addEmployeeAsync(Employee manager, Employee employee, object userState) {
            if ((this.addEmployeeOperationCompleted == null)) {
                this.addEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddEmployeeOperationCompleted);
            }
            this.InvokeAsync("addEmployee", new object[] {
                        manager,
                        employee}, this.addEmployeeOperationCompleted, userState);
        }
        
        private void OnaddEmployeeOperationCompleted(object arg) {
            if ((this.addEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addEmployeeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getManagerOf", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Employee getManagerOf(Employee employee) {
            object[] results = this.Invoke("getManagerOf", new object[] {
                        employee});
            return ((Employee)(results[0]));
        }
        
        /// <remarks/>
        public void getManagerOfAsync(Employee employee) {
            this.getManagerOfAsync(employee, null);
        }
        
        /// <remarks/>
        public void getManagerOfAsync(Employee employee, object userState) {
            if ((this.getManagerOfOperationCompleted == null)) {
                this.getManagerOfOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetManagerOfOperationCompleted);
            }
            this.InvokeAsync("getManagerOf", new object[] {
                        employee}, this.getManagerOfOperationCompleted, userState);
        }
        
        private void OngetManagerOfOperationCompleted(object arg) {
            if ((this.getManagerOfCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getManagerOfCompleted(this, new getManagerOfCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getEmployeesOf", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Employee[] getEmployeesOf(Employee manager) {
            object[] results = this.Invoke("getEmployeesOf", new object[] {
                        manager});
            return ((Employee[])(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeesOfAsync(Employee manager) {
            this.getEmployeesOfAsync(manager, null);
        }
        
        /// <remarks/>
        public void getEmployeesOfAsync(Employee manager, object userState) {
            if ((this.getEmployeesOfOperationCompleted == null)) {
                this.getEmployeesOfOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeesOfOperationCompleted);
            }
            this.InvokeAsync("getEmployeesOf", new object[] {
                        manager}, this.getEmployeesOfOperationCompleted, userState);
        }
        
        private void OngetEmployeesOfOperationCompleted(object arg) {
            if ((this.getEmployeesOfCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeesOfCompleted(this, new getEmployeesOfCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllEmployees", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Employee[] getAllEmployees() {
            object[] results = this.Invoke("getAllEmployees", new object[0]);
            return ((Employee[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllEmployeesAsync() {
            this.getAllEmployeesAsync(null);
        }
        
        /// <remarks/>
        public void getAllEmployeesAsync(object userState) {
            if ((this.getAllEmployeesOperationCompleted == null)) {
                this.getAllEmployeesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllEmployeesOperationCompleted);
            }
            this.InvokeAsync("getAllEmployees", new object[0], this.getAllEmployeesOperationCompleted, userState);
        }
        
        private void OngetAllEmployeesOperationCompleted(object arg) {
            if ((this.getAllEmployeesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllEmployeesCompleted(this, new getAllEmployeesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/hireEmployee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Employee hireEmployee(string name, string ssn) {
            object[] results = this.Invoke("hireEmployee", new object[] {
                        name,
                        ssn});
            return ((Employee)(results[0]));
        }
        
        /// <remarks/>
        public void hireEmployeeAsync(string name, string ssn) {
            this.hireEmployeeAsync(name, ssn, null);
        }
        
        /// <remarks/>
        public void hireEmployeeAsync(string name, string ssn, object userState) {
            if ((this.hireEmployeeOperationCompleted == null)) {
                this.hireEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnhireEmployeeOperationCompleted);
            }
            this.InvokeAsync("hireEmployee", new object[] {
                        name,
                        ssn}, this.hireEmployeeOperationCompleted, userState);
        }
        
        private void OnhireEmployeeOperationCompleted(object arg) {
            if ((this.hireEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.hireEmployeeCompleted(this, new hireEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/createEmployee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Employee createEmployee(string name, string ssn) {
            object[] results = this.Invoke("createEmployee", new object[] {
                        name,
                        ssn});
            return ((Employee)(results[0]));
        }
        
        /// <remarks/>
        public void createEmployeeAsync(string name, string ssn) {
            this.createEmployeeAsync(name, ssn, null);
        }
        
        /// <remarks/>
        public void createEmployeeAsync(string name, string ssn, object userState) {
            if ((this.createEmployeeOperationCompleted == null)) {
                this.createEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateEmployeeOperationCompleted);
            }
            this.InvokeAsync("createEmployee", new object[] {
                        name,
                        ssn}, this.createEmployeeOperationCompleted, userState);
        }
        
        private void OncreateEmployeeOperationCompleted(object arg) {
            if ((this.createEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createEmployeeCompleted(this, new createEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/stringifyEmployee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string stringifyEmployee(Employee employee) {
            object[] results = this.Invoke("stringifyEmployee", new object[] {
                        employee});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void stringifyEmployeeAsync(Employee employee) {
            this.stringifyEmployeeAsync(employee, null);
        }
        
        /// <remarks/>
        public void stringifyEmployeeAsync(Employee employee, object userState) {
            if ((this.stringifyEmployeeOperationCompleted == null)) {
                this.stringifyEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstringifyEmployeeOperationCompleted);
            }
            this.InvokeAsync("stringifyEmployee", new object[] {
                        employee}, this.stringifyEmployeeOperationCompleted, userState);
        }
        
        private void OnstringifyEmployeeOperationCompleted(object arg) {
            if ((this.stringifyEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.stringifyEmployeeCompleted(this, new stringifyEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Employee {
        
        private string nameField;
        
        private string ssnField;
        
        private Employee managerField;
        
        private Employee[] subordinatesField;
        
        private System.Guid idField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string ssn {
            get {
                return this.ssnField;
            }
            set {
                this.ssnField = value;
            }
        }
        
        /// <remarks/>
        public Employee Manager {
            get {
                return this.managerField;
            }
            set {
                this.managerField = value;
            }
        }
        
        /// <remarks/>
        public Employee[] Subordinates {
            get {
                return this.subordinatesField;
            }
            set {
                this.subordinatesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Guid id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void addManagerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void addEmployeeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getManagerOfCompletedEventHandler(object sender, getManagerOfCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getManagerOfCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getManagerOfCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Employee Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Employee)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getEmployeesOfCompletedEventHandler(object sender, getEmployeesOfCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeesOfCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeesOfCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Employee[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Employee[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getAllEmployeesCompletedEventHandler(object sender, getAllEmployeesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllEmployeesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllEmployeesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Employee[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Employee[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void hireEmployeeCompletedEventHandler(object sender, hireEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class hireEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal hireEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Employee Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Employee)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void createEmployeeCompletedEventHandler(object sender, createEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Employee Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Employee)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void stringifyEmployeeCompletedEventHandler(object sender, stringifyEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class stringifyEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal stringifyEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591