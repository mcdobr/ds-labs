//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ChatClient.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ChatServiceSoap", Namespace="http://tempuri.org/")]
    public partial class ChatService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback connectOperationCompleted;
        
        private System.Threading.SendOrPostCallback disconnectOperationCompleted;
        
        private System.Threading.SendOrPostCallback broadcastMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendPrivateMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUnreadMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getConnectedUsersOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ChatService() {
            this.Url = global::ChatClient.Properties.Settings.Default.ChatClient_localhost_ChatService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event connectCompletedEventHandler connectCompleted;
        
        /// <remarks/>
        public event disconnectCompletedEventHandler disconnectCompleted;
        
        /// <remarks/>
        public event broadcastMessageCompletedEventHandler broadcastMessageCompleted;
        
        /// <remarks/>
        public event sendPrivateMessageCompletedEventHandler sendPrivateMessageCompleted;
        
        /// <remarks/>
        public event getUnreadMessagesCompletedEventHandler getUnreadMessagesCompleted;
        
        /// <remarks/>
        public event getConnectedUsersCompletedEventHandler getConnectedUsersCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/connect", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool connect(string username) {
            object[] results = this.Invoke("connect", new object[] {
                        username});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void connectAsync(string username) {
            this.connectAsync(username, null);
        }
        
        /// <remarks/>
        public void connectAsync(string username, object userState) {
            if ((this.connectOperationCompleted == null)) {
                this.connectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconnectOperationCompleted);
            }
            this.InvokeAsync("connect", new object[] {
                        username}, this.connectOperationCompleted, userState);
        }
        
        private void OnconnectOperationCompleted(object arg) {
            if ((this.connectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.connectCompleted(this, new connectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/disconnect", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void disconnect(string username) {
            this.Invoke("disconnect", new object[] {
                        username});
        }
        
        /// <remarks/>
        public void disconnectAsync(string username) {
            this.disconnectAsync(username, null);
        }
        
        /// <remarks/>
        public void disconnectAsync(string username, object userState) {
            if ((this.disconnectOperationCompleted == null)) {
                this.disconnectOperationCompleted = new System.Threading.SendOrPostCallback(this.OndisconnectOperationCompleted);
            }
            this.InvokeAsync("disconnect", new object[] {
                        username}, this.disconnectOperationCompleted, userState);
        }
        
        private void OndisconnectOperationCompleted(object arg) {
            if ((this.disconnectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.disconnectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/broadcastMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void broadcastMessage(ChatMessage msg) {
            this.Invoke("broadcastMessage", new object[] {
                        msg});
        }
        
        /// <remarks/>
        public void broadcastMessageAsync(ChatMessage msg) {
            this.broadcastMessageAsync(msg, null);
        }
        
        /// <remarks/>
        public void broadcastMessageAsync(ChatMessage msg, object userState) {
            if ((this.broadcastMessageOperationCompleted == null)) {
                this.broadcastMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbroadcastMessageOperationCompleted);
            }
            this.InvokeAsync("broadcastMessage", new object[] {
                        msg}, this.broadcastMessageOperationCompleted, userState);
        }
        
        private void OnbroadcastMessageOperationCompleted(object arg) {
            if ((this.broadcastMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.broadcastMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/sendPrivateMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void sendPrivateMessage(ChatMessage msg) {
            this.Invoke("sendPrivateMessage", new object[] {
                        msg});
        }
        
        /// <remarks/>
        public void sendPrivateMessageAsync(ChatMessage msg) {
            this.sendPrivateMessageAsync(msg, null);
        }
        
        /// <remarks/>
        public void sendPrivateMessageAsync(ChatMessage msg, object userState) {
            if ((this.sendPrivateMessageOperationCompleted == null)) {
                this.sendPrivateMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendPrivateMessageOperationCompleted);
            }
            this.InvokeAsync("sendPrivateMessage", new object[] {
                        msg}, this.sendPrivateMessageOperationCompleted, userState);
        }
        
        private void OnsendPrivateMessageOperationCompleted(object arg) {
            if ((this.sendPrivateMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendPrivateMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUnreadMessages", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ChatMessage[] getUnreadMessages(string username) {
            object[] results = this.Invoke("getUnreadMessages", new object[] {
                        username});
            return ((ChatMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void getUnreadMessagesAsync(string username) {
            this.getUnreadMessagesAsync(username, null);
        }
        
        /// <remarks/>
        public void getUnreadMessagesAsync(string username, object userState) {
            if ((this.getUnreadMessagesOperationCompleted == null)) {
                this.getUnreadMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUnreadMessagesOperationCompleted);
            }
            this.InvokeAsync("getUnreadMessages", new object[] {
                        username}, this.getUnreadMessagesOperationCompleted, userState);
        }
        
        private void OngetUnreadMessagesOperationCompleted(object arg) {
            if ((this.getUnreadMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUnreadMessagesCompleted(this, new getUnreadMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getConnectedUsers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] getConnectedUsers() {
            object[] results = this.Invoke("getConnectedUsers", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getConnectedUsersAsync() {
            this.getConnectedUsersAsync(null);
        }
        
        /// <remarks/>
        public void getConnectedUsersAsync(object userState) {
            if ((this.getConnectedUsersOperationCompleted == null)) {
                this.getConnectedUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetConnectedUsersOperationCompleted);
            }
            this.InvokeAsync("getConnectedUsers", new object[0], this.getConnectedUsersOperationCompleted, userState);
        }
        
        private void OngetConnectedUsersOperationCompleted(object arg) {
            if ((this.getConnectedUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getConnectedUsersCompleted(this, new getConnectedUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ChatMessage {
        
        private string senderField;
        
        private string receiverField;
        
        private string contentField;
        
        /// <remarks/>
        public string Sender {
            get {
                return this.senderField;
            }
            set {
                this.senderField = value;
            }
        }
        
        /// <remarks/>
        public string Receiver {
            get {
                return this.receiverField;
            }
            set {
                this.receiverField = value;
            }
        }
        
        /// <remarks/>
        public string Content {
            get {
                return this.contentField;
            }
            set {
                this.contentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void connectCompletedEventHandler(object sender, connectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class connectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal connectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void disconnectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void broadcastMessageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void sendPrivateMessageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getUnreadMessagesCompletedEventHandler(object sender, getUnreadMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUnreadMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUnreadMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ChatMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ChatMessage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getConnectedUsersCompletedEventHandler(object sender, getConnectedUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getConnectedUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getConnectedUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591